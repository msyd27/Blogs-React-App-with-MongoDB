{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msyd2\\\\Documents\\\\Uni\\\\CPS 630\\\\Lab 2\\\\my-blog\\\\src\\\\Blog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Blog() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // Fetch posts from the backend server when the component mounts\n    fetch('/api/posts').then(response => response.json()).then(data => setPosts(data)).catch(error => console.error('Error fetching posts:', error));\n  }, []); // Empty dependency array to run effect only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(Blog, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","content","id","_c","$RefreshReg$"],"sources":["C:/Users/msyd2/Documents/Uni/CPS 630/Lab 2/my-blog/src/Blog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Blog() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch posts from the backend server when the component mounts\r\n        fetch('/api/posts')\r\n            .then(response => response.json())\r\n            .then(data => setPosts(data))\r\n            .catch(error => console.error('Error fetching posts:', error));\r\n    }, []); // Empty dependency array to run effect only once on mount\r\n\r\n    return (\r\n        <div>\r\n            <h2>Blog Posts</h2>\r\n            {posts.map((post) => (\r\n                <div key={post.id}>\r\n                    <h3>{post.title}</h3>\r\n                    <p>{post.content}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Blog;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ;IACAO,KAAK,CAAC,YAAY,CAAC,CACdC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIX,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBd,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACZnB,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,EAAKM,IAAI,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBjB,OAAA;QAAAa,QAAA,EAAIM,IAAI,CAACE;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFfE,IAAI,CAACG,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACf,EAAA,CAtBQD,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAwBb,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}